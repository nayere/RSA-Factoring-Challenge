#!/bin/bash

pollard_rho() {
    if [ $(($1 % 2)) -eq 0 ]; then
        echo "2"
        return
    fi

    x=2
    y=2
    d=1

    f() {
        echo $(($(($1 * $1)) + 1))
    }

    while [ $d -eq 1 ]; do
        x=$(f $x)
        y=$(f $(f $y))
        d=$(gcd $((x - y < 0 ? y - x : x - y)) $1)
    done

    echo $d
}

is_prime() {
    if [ $1 -lt 2 ]; then
        return 1
    fi

    for ((i = 2; i <= $(( $1 / 2 )); i++)); do
        if [ $(($1 % $i)) -eq 0 ]; then
            return 1
        fi
    done

    return 0
}

gcd() {
    if [ $2 -eq 0 ]; then
        echo $1
    else
        echo $(gcd $2 $(($1 % $2)))
    fi
}

main() {
    if [ $# -ne 1 ]; then
        echo "Usage: $0 <file>"
        return
    fi

    file_path=$1

    if [ ! -f $file_path ]; then
        echo "File '$file_path' not found."
        return
    fi

    number=$(head -n 1 $file_path | tr -d '\n\r')

    if ! [[ $number =~ ^[0-9]+$ ]]; then
        echo "Invalid data in the file. Please make sure it contains a single integer."
        return
    fi

    start_time=$(date +%s)
    p=$(pollard_rho $number)
    
    while ! is_prime $p; do
        p=$(pollard_rho $p)
        current_time=$(date +%s)
        elapsed_time=$((current_time - start_time))
        if [ $elapsed_time -gt 5 ]; then
            echo "Time limit exceeded"
            return
        fi
    done

    q=$(( $number / $p ))

    if [ $p -eq $number ] || [ $q -eq $number ]; then
        echo "$number is prime."
    else
        echo "$number=$p*$q"
    fi
}

main "$@"
